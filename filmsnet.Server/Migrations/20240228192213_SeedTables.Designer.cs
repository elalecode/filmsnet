// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using filmsnet.Server.DataBase;

#nullable disable

namespace filmsnet.Server.Migrations
{
    [DbContext(typeof(FilmsnetDBContext))]
    [Migration("20240228192213_SeedTables")]
    partial class SeedTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CatActorFilm", b =>
                {
                    b.Property<long>("FilmsId")
                        .HasColumnType("bigint");

                    b.Property<long>("ActorsId")
                        .HasColumnType("bigint");

                    b.HasKey("FilmsId", "ActorsId");

                    b.HasIndex("ActorsId");

                    b.ToTable("CatActorFilm");

                    b.HasData(
                        new
                        {
                            FilmsId = 1L,
                            ActorsId = 1L
                        },
                        new
                        {
                            FilmsId = 1L,
                            ActorsId = 7L
                        },
                        new
                        {
                            FilmsId = 1L,
                            ActorsId = 4L
                        },
                        new
                        {
                            FilmsId = 2L,
                            ActorsId = 1L
                        },
                        new
                        {
                            FilmsId = 2L,
                            ActorsId = 4L
                        },
                        new
                        {
                            FilmsId = 2L,
                            ActorsId = 13L
                        },
                        new
                        {
                            FilmsId = 2L,
                            ActorsId = 11L
                        },
                        new
                        {
                            FilmsId = 2L,
                            ActorsId = 3L
                        },
                        new
                        {
                            FilmsId = 2L,
                            ActorsId = 9L
                        },
                        new
                        {
                            FilmsId = 3L,
                            ActorsId = 7L
                        },
                        new
                        {
                            FilmsId = 3L,
                            ActorsId = 5L
                        },
                        new
                        {
                            FilmsId = 3L,
                            ActorsId = 6L
                        },
                        new
                        {
                            FilmsId = 3L,
                            ActorsId = 3L
                        },
                        new
                        {
                            FilmsId = 3L,
                            ActorsId = 2L
                        },
                        new
                        {
                            FilmsId = 3L,
                            ActorsId = 10L
                        },
                        new
                        {
                            FilmsId = 3L,
                            ActorsId = 9L
                        },
                        new
                        {
                            FilmsId = 4L,
                            ActorsId = 11L
                        },
                        new
                        {
                            FilmsId = 4L,
                            ActorsId = 3L
                        },
                        new
                        {
                            FilmsId = 4L,
                            ActorsId = 6L
                        },
                        new
                        {
                            FilmsId = 4L,
                            ActorsId = 8L
                        },
                        new
                        {
                            FilmsId = 4L,
                            ActorsId = 9L
                        },
                        new
                        {
                            FilmsId = 4L,
                            ActorsId = 14L
                        },
                        new
                        {
                            FilmsId = 4L,
                            ActorsId = 13L
                        });
                });

            modelBuilder.Entity("CatGenreFilm", b =>
                {
                    b.Property<long>("FilmsId")
                        .HasColumnType("bigint");

                    b.Property<long>("GenresId")
                        .HasColumnType("bigint");

                    b.HasKey("FilmsId", "GenresId");

                    b.HasIndex("GenresId");

                    b.ToTable("CatGenreFilm");

                    b.HasData(
                        new
                        {
                            FilmsId = 1L,
                            GenresId = 1L
                        },
                        new
                        {
                            FilmsId = 1L,
                            GenresId = 5L
                        },
                        new
                        {
                            FilmsId = 2L,
                            GenresId = 3L
                        },
                        new
                        {
                            FilmsId = 3L,
                            GenresId = 7L
                        },
                        new
                        {
                            FilmsId = 4L,
                            GenresId = 2L
                        });
                });

            modelBuilder.Entity("filmsnet.Server.DataBase.CatActor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatActors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Robert De Niro"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Jack Nicholson"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Marlon Brando"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Denzel Washington"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Katharine Hepburn"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Meryl Streep"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Sidney Poitier"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "Tom Hanks"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "Elizabeth Taylor"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "Cate Blanchett"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "Kate Winslet"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "Shah Rukh Khan"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "Viola Davis"
                        });
                });

            modelBuilder.Entity("filmsnet.Server.DataBase.CatGenre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatGenres");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "Animation"
                        });
                });

            modelBuilder.Entity("filmsnet.Server.DataBase.Film", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Title = "Night Swim"
                        },
                        new
                        {
                            Id = 2L,
                            Title = "The Underdoggs"
                        },
                        new
                        {
                            Id = 3L,
                            Title = "Mean Girls"
                        },
                        new
                        {
                            Id = 4L,
                            Title = "Creed III"
                        },
                        new
                        {
                            Id = 5L,
                            Title = "John Wick: Chapter 4"
                        });
                });

            modelBuilder.Entity("CatActorFilm", b =>
                {
                    b.HasOne("filmsnet.Server.DataBase.CatActor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("filmsnet.Server.DataBase.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CatGenreFilm", b =>
                {
                    b.HasOne("filmsnet.Server.DataBase.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("filmsnet.Server.DataBase.CatGenre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
